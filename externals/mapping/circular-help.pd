#N canvas 1 53 494 463 10;
#X obj 5 2 cnv 15 450 20 empty empty circular 2 11 1 18 -233017 -66577
0;
#X msg 422 3 pddp;
#X text 273 392 released under the GNU GPL;
#X text 148 361 For more info:;
#X floatatom 15 127 8 0 0 0 - - -;
#X floatatom 15 288 8 0 0 0 - - -;
#X obj 18 305 hsl 200 20 0 1 0 0 empty empty curved_output 22 11 1
12 -262144 -1 -1 0 1;
#X obj 18 101 hsl 200 20 0 1 0 0 empty empty raw_input 22 11 1 12 -261681
-1 -1 0 1;
#N canvas 144 55 490 423 draw_array 0;
#X msg 54 82 bang;
#X obj 54 133 until;
#X text 85 82 start;
#X obj 54 155 f;
#X obj 83 155 + 1;
#X obj 54 43 loadbang;
#X obj 54 210 trigger float float;
#X obj 127 157 select 0;
#X obj 53 343 tabwrite \$0-curve;
#X obj 139 53 trigger bang float;
#X obj 83 177 mod 200;
#X obj 54 237 / 200;
#X text 96 237 mapping output range: 0 to 1;
#N canvas 0 22 461 369 receive 0;
#X obj 253 33 receive \$0-y;
#X obj 253 57 moses;
#X obj 280 78 moses 201;
#X obj 331 99 bang;
#X msg 331 120 200;
#X obj 238 98 bang;
#X msg 238 119 0;
#X obj 91 56 moses;
#X obj 118 77 moses 201;
#X obj 169 98 bang;
#X msg 169 119 200;
#X obj 76 97 bang;
#X msg 76 118 0;
#X obj 91 32 receive \$0-x;
#X obj 117 289 receive \$0-x-slider;
#X floatatom 118 312 5 0 0 0 - - -;
#X floatatom 279 313 5 0 0 0 - - -;
#X obj 280 290 receive \$0-y-slider;
#X obj 118 169 / 200;
#X obj 280 170 / 200;
#X obj 118 249 send \$0-x-slider-receive;
#X obj 280 250 send \$0-y-slider-receive;
#X msg 281 193 1 \$1;
#X obj 280 221 -;
#X connect 0 0 1 0;
#X connect 1 0 5 0;
#X connect 1 1 2 0;
#X connect 2 0 19 0;
#X connect 2 1 3 0;
#X connect 3 0 4 0;
#X connect 4 0 19 0;
#X connect 5 0 6 0;
#X connect 6 0 19 0;
#X connect 7 0 11 0;
#X connect 7 1 8 0;
#X connect 8 0 18 0;
#X connect 8 1 9 0;
#X connect 9 0 10 0;
#X connect 10 0 18 0;
#X connect 11 0 12 0;
#X connect 12 0 18 0;
#X connect 13 0 7 0;
#X connect 14 0 15 0;
#X connect 17 0 16 0;
#X connect 18 0 20 0;
#X connect 19 0 22 0;
#X connect 22 0 23 0;
#X connect 23 0 21 0;
#X restore 265 348 pd receive from gcanvas;
#X obj 138 9 receive \$0-x-slider;
#X obj 54 106 cyclone/speedlim 100;
#X obj 53 293 circular;
#X connect 0 0 15 0;
#X connect 1 0 3 0;
#X connect 3 0 4 0;
#X connect 3 0 6 0;
#X connect 4 0 10 0;
#X connect 5 0 0 0;
#X connect 6 0 11 0;
#X connect 6 1 8 1;
#X connect 7 0 1 1;
#X connect 9 0 0 0;
#X connect 10 0 3 1;
#X connect 10 0 7 0;
#X connect 11 0 16 0;
#X connect 14 0 9 0;
#X connect 15 0 1 0;
#X connect 16 0 8 0;
#X restore 367 71 pd draw_array;
#X obj 252 359 pddp/open mapping-about;
#X text 6 391 (C) Copyright 2007 Free Software Foundation;
#X obj 15 207 circular;
#X obj 262 103 gcanvas 200 200;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-curve 200 float 0;
#X coords 0 1 199 0 200 200 1;
#X restore 262 103 graph;
#X obj 262 308 send \$0-x;
#X obj 404 307 send \$0-y;
#X text 17 39 This object curves the input range using a double-circular
seat controlled by one parameter.;
#N canvas 498 82 494 344 META 0;
#X text 12 135 HELP_PATCH_AUTHORS "pd meta" information added by Jonathan
Wilkes for Pd version 0.42.;
#X text 12 25 LICENSE GPL v2;
#X text 12 95 OUTLET_0 float;
#X text 12 115 AUTHOR Cyrille Henry and Hans-Christoph Steiner;
#X text 12 75 INLET_0 float;
#X text 12 5 KEYWORDS control abstraction;
#X text 12 45 DESCRIPTION curve the input range using a double-circular
seat controlled by one parameter;
#X restore 442 431 pd META;
#X connect 4 0 11 0;
#X connect 5 0 6 0;
#X connect 7 0 4 0;
#X connect 11 0 5 0;
#X connect 12 0 14 0;
#X connect 12 1 15 0;
