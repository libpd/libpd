#N canvas -64 430 759 378 10;
#X obj 525 177 part_color;
#X text 98 142 sets the color(s) of a particle-system. You can set
2 different colors \, particles will have either the one or the other.
;
#N canvas 0 0 450 300 gemwin 0;
#X obj 132 136 gemwin;
#X obj 67 89 outlet;
#X obj 67 10 inlet;
#X obj 67 41 route create;
#X msg 67 70 set destroy;
#X msg 142 68 set create;
#X msg 132 112 create \, 1;
#X msg 198 112 destroy;
#X obj 287 94 loadbang;
#X msg 294 121 reset \, lighting 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 0 6 0;
#X connect 3 1 5 0;
#X connect 3 1 7 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 8 0 9 0;
#X connect 9 0 0 0;
#X restore 546 309 pd gemwin;
#X msg 546 290 create;
#X text 544 269 Create window:;
#X text 31 14 Synopsis: [part_color];
#X text 38 68 Inlet 2: R1 G1 B1;
#X text 51 97 Class: Particle System;
#X text 7 123 Description: Defines color of particles;
#X text 434 16 Example:;
#X obj 525 81 part_source;
#X obj 525 208 part_draw;
#X obj 525 36 gemhead;
#X msg 634 115 0 0 1;
#X msg 634 140 1 0 0;
#X obj 525 57 part_head;
#X obj 525 119 part_killold 5;
#X text 38 41 inlet 1: gemlist (with part_head);
#X obj 524 17 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 0 1
;
#X connect 0 0 11 0;
#X connect 2 0 3 0;
#X connect 3 0 2 0;
#X connect 10 0 16 0;
#X connect 12 0 15 0;
#X connect 13 0 0 1;
#X connect 14 0 0 2;
#X connect 15 0 10 0;
#X connect 16 0 0 0;
#X connect 18 0 12 0;
