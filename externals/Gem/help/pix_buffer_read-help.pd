#N canvas 48 174 691 473 10;
#X text 452 8 GEM object;
#X obj 9 265 cnv 15 430 135 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 40 267 Inlets:;
#X text 39 352 Outlets:;
#X obj 9 227 cnv 15 430 30 empty empty empty 20 12 0 14 -195568 -66577
0;
#X text 18 226 Arguments:;
#X obj 8 56 cnv 15 430 165 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 449 77 cnv 15 200 280 empty empty empty 20 12 0 14 -228992 -66577
0;
#X text 453 60 Example:;
#X obj 544 290 cnv 15 100 60 empty empty empty 20 12 0 14 -195568 -66577
0;
#N canvas 0 0 450 300 gemwin 0;
#X obj 132 136 gemwin;
#X obj 67 89 outlet;
#X obj 67 10 inlet;
#X msg 67 70 set destroy;
#X msg 132 112 create \, 1;
#X msg 198 112 destroy;
#X msg 156 71 set create;
#X obj 67 41 route create;
#X connect 2 0 7 0;
#X connect 3 0 1 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 1 0;
#X connect 7 0 3 0;
#X connect 7 0 4 0;
#X connect 7 1 6 0;
#X connect 7 1 5 0;
#X restore 549 329 pd gemwin;
#X msg 549 310 create;
#X text 545 289 Create window:;
#X obj 451 109 cnv 15 155 80 empty empty empty 20 12 0 14 -24198 -66577
0;
#X obj 451 83 gemhead;
#X text 17 366 Outlet 1: gemlist;
#X text 24 281 Inlet 1: gemlist;
#X obj 451 242 pix_texture;
#X floatatom 560 142 3 0 9 2 index - -;
#X text 71 31 Class: pix object;
#X text 64 237 list: <buffer_name>;
#X text 440 363 see also:;
#X obj 508 382 pix_buffer_write;
#X text 50 12 Synopsis: [pix_buffer_read];
#X text 29 57 Description: read from a [pix_buffer];
#X obj 451 168 pix_buffer_read depot;
#X obj 451 271 translate -2 0 1 0;
#X obj 451 292 square 1.9;
#X text 24 295 Inlet 1: message: set <buffer_name>: read from another
buffer.;
#X text 24 320 Inlet 2: int: index of the frame in the named pix_buffer
to read.;
#X text 11 79 [pix_buffer_read] reads an image from the named buffer
provided by [pix_buffer]. Specify the frame of the buffer you want
to read via the second inlet. If no frame is stored at the specified
index \, you will get no image. (eg: no texture will be applied). You
can change the buffer to read from on the fly via the [set( message.
;
#X msg 464 138 set depot3;
#X obj 508 362 pix_buffer depot3 1;
#X connect 10 0 11 0;
#X connect 11 0 10 0;
#X connect 14 0 25 0;
#X connect 17 0 26 0;
#X connect 18 0 25 1;
#X connect 25 0 17 0;
#X connect 26 0 27 0;
#X connect 31 0 25 0;
