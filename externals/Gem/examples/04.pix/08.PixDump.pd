#N canvas 53 47 761 536 10;
#X obj 143 110 gemhead;
#X obj 143 203 pix_dump;
#X text 101 24 pix_dump;
#X text 99 37 ========;
#X msg 369 184 bang;
#X obj 143 387 pix_texture;
#X msg 149 366 quality 0;
#X obj 143 409 square 2;
#X obj 149 343 loadbang;
#X text 412 184 trigger the pix_dump;
#X text 246 24 dump the pixels of the image;
#X obj 194 254 print dump;
#X text 297 265 this produces an output like;
#X text 292 285 "r1 g1 b1 a1 r2 g2 b2 a2 r3 ...";
#X text 292 302 (r=red \; g=green \; b=blue \; a=alpha);
#X obj 474 371 repack;
#X text 278 369 maybe you would like to use;
#X text 525 373 (part of zexy);
#X text 275 389 to excerpt pixel information out of this;
#X text 101 487 maybe have a look at;
#X obj 250 487 pix_set;
#X obj 455 54 cnv 15 220 70 empty empty empty 20 12 0 14 -195568 -66577
0;
#N canvas 0 22 454 304 gemwin 0;
#X obj 132 136 gemwin;
#X obj 67 89 outlet;
#X obj 67 10 inlet;
#X obj 67 41 route create;
#X msg 67 70 set destroy;
#X msg 182 68 set create;
#X msg 132 112 create \, 1;
#X msg 238 112 destroy;
#N canvas 87 154 247 179 Gem.init 0;
#X obj 118 46 loadbang;
#X msg 118 81 reset;
#X obj 118 113 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 289 80 pd Gem.init;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 0 6 0;
#X connect 3 1 5 0;
#X connect 3 1 7 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 8 0 0 0;
#X restore 460 98 pd gemwin;
#X msg 460 74 create;
#X text 456 54 Create window and render;
#X obj 143 135 pix_image ../data/blob2.tif;
#X connect 0 0 25 0;
#X connect 1 0 5 0;
#X connect 1 1 11 0;
#X connect 4 0 1 0;
#X connect 5 0 7 0;
#X connect 6 0 5 0;
#X connect 8 0 6 0;
#X connect 22 0 23 0;
#X connect 23 0 22 0;
#X connect 25 0 1 0;
