#N canvas 111 106 885 510 10;
#X floatatom 664 182 0 0 0 0 - - -;
#X obj 664 210 / 100;
#X floatatom 610 163 0 0 0 0 - - -;
#X obj 610 192 / 100;
#X obj 343 56 gemhead;
#X obj 343 319 pix_texture;
#X msg 394 359 4;
#X floatatom 556 121 0 0 0 0 - - -;
#X obj 556 149 / 100;
#X obj 343 268 pix_gain;
#X obj 556 241 pack 0 0 0;
#X obj 343 387 triangle;
#X text 356 341 click here to change the size of the triangle;
#X msg 570 213 bang;
#X obj 343 82 pix_image ../data/fractal.JPG;
#X obj 364 134 vsl 15 128 0 1 0 0 empty empty empty 20 8 0 8 -262144
-1 -1 0 1;
#X text 382 141 overall factor;
#X text 632 121 color-wise factor;
#X text 103 453 using [pix_gain] is probably very expensive (since
it does operations on your CPU). Try using [color] if your card has
openGL-hw-accleration...;
#X obj 20 69 cnv 15 220 70 empty empty empty 20 12 0 14 -195568 -66577
0;
#N canvas 0 22 454 304 gemwin 0;
#X obj 132 136 gemwin;
#X obj 67 89 outlet;
#X obj 67 10 inlet;
#X obj 67 41 route create;
#X msg 67 70 set destroy;
#X msg 182 68 set create;
#X msg 132 112 create \, 1;
#X msg 238 112 destroy;
#N canvas 87 154 247 179 Gem.init 0;
#X obj 118 46 loadbang;
#X msg 118 81 reset;
#X obj 118 113 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 289 80 pd Gem.init;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 0 6 0;
#X connect 3 1 5 0;
#X connect 3 1 7 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 8 0 0 0;
#X restore 25 113 pd gemwin;
#X msg 25 89 create;
#X text 21 69 Create window and render;
#X connect 0 0 1 0;
#X connect 1 0 10 2;
#X connect 1 0 13 0;
#X connect 2 0 3 0;
#X connect 3 0 10 1;
#X connect 3 0 13 0;
#X connect 4 0 14 0;
#X connect 5 0 11 0;
#X connect 6 0 11 1;
#X connect 7 0 8 0;
#X connect 8 0 10 0;
#X connect 9 0 5 0;
#X connect 10 0 9 2;
#X connect 13 0 10 0;
#X connect 14 0 9 0;
#X connect 15 0 9 1;
#X connect 20 0 21 0;
#X connect 21 0 20 0;
