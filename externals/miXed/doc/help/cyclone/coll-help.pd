#N canvas 0 26 739 649 10;
#X obj 4 4 cnv 15 400 40 empty empty empty 20 12 0 14 -262130 -66577
0;
#X text 10 607 docs based on the MAX/MSP reference (c) cycling'74;
#X text 9 621 ___________________________________________________;
#X text 146 23 store and edit collections of messages;
#X obj 30 23 coll filename;
#C restore;
#X obj 243 486 coll /tmp/test.coll;
#C restore;
#X obj 244 56 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X msg 255 109 next;
#X obj 243 575 print coll;
#X msg 266 132 prev;
#X msg 156 127 clear;
#X floatatom 285 552 5 0 0 0 - - -;
#X obj 328 532 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 371 514 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X msg 274 155 dump;
#X msg 283 179 read /tmp/foo;
#X msg 290 205 read;
#X msg 316 276 length;
#X text 354 534 bang when we finished a load or save operation;
#X text 394 516 bang when finished with a dump operation;
#X text 329 554 index of the message sent out;
#X text 389 484 optional arg loads a file into coll;
#N canvas 79 76 329 260 loadsomeitems 0;
#X obj -44 53 inlet;
#X obj -13 220 outlet;
#X obj -44 75 t b b;
#X text -70 21 messages prefixed with an index are stored:;
#X msg -59 110 4 this is a message;
#X msg 7 180 1 10;
#X msg -40 132 3 and another one with 12345 in it;
#X msg -13 155 2 some_symbol;
#X connect 0 0 2 0;
#X connect 2 1 4 0;
#X connect 2 1 6 0;
#X connect 2 1 7 0;
#X connect 2 1 5 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 1 0;
#X connect 7 0 1 0;
#X restore 244 80 pd loadsomeitems;
#X text 276 56 load stuff;
#X text 153 81 look inside:;
#X text 305 133 previous;
#X text 314 156 dump them all;
#X text 383 180 read a file;
#X text 324 204 opens a dialog;
#X msg 298 229 write /tmp/foo;
#X text 404 231 write a file;
#X text 354 251 open a dialog;
#X msg 308 252 write;
#X floatatom 203 109 5 0 0 0 - - -;
#X text 85 108 output by index:;
#X text 46 127 clear contents:;
#X text 372 276 output nr. of messages stored;
#X text 295 108 output next =;
#X msg 392 107 bang;
#X msg 322 298 delete 2;
#X text 389 298 delete message \, and decrement larger indexes;
#X msg 326 344 goto 2;
#X text 379 346 goto item nr;
#X msg 332 367 end;
#X text 363 368 goto last item;
#X msg 333 389 filetype;
#X text 407 392 useless on unix it's a dummy function;
#X msg 338 412 flags 1 0;
#X text 412 414 save coll's contents with the patch;
#X msg 338 438 flags 0 0;
#X text 414 439 don't save (default);
#N canvas 98 103 484 259 more 0;
#X obj 129 205 outlet;
#X msg 50 37 store named_one this works too;
#X msg 95 67 named_one;
#X msg 129 112 nstore 5 foobar stored and associated;
#X msg 146 140 foobar;
#X text 198 141 =;
#X msg 214 141 5;
#X text 127 93 store and associate at once:;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 6 0 0 0;
#X restore 65 400 pd more ways to store;
#N canvas 27 85 907 412 complex 0;
#X obj 100 366 outlet;
#X msg 44 62 assoc bar 1;
#X msg 100 88 bar;
#X msg 118 119 subsym foo bar;
#X msg 131 149 foo;
#X msg 138 178 deassoc foo 1;
#X text 18 10 coll can associate indexes and symbols \, symbols;
#X text 17 22 can be used just like ints to operate on or re-;
#X text 16 35 trieve data:;
#X obj 131 251 r cout;
#X obj 500 372 s cout;
#X text 135 63 associate index 1 with 'bar';
#X text 138 91 retrieve it using association;
#X text 230 121 change association;
#X text 163 149 retrieve;
#X text 239 179 remove association;
#X msg 315 209 nth 4 3;
#X text 16 210 retrieve 3rd element of message at index 4;
#X msg 423 70 merge 2 and this was appended;
#X msg 448 96 2;
#X text 419 37 merge appends a message to an;
#X text 419 50 already stored one:;
#X msg 500 130 insert 2 a new two;
#X text 498 102 inserts new message at index;
#X text 499 113 and increments all indexes >=;
#X floatatom 520 160 5 0 0 0 - - -;
#X text 562 159 check it out ...;
#X text 543 220 or send it out immediately:;
#X text 536 181 replace an item (silently):;
#X msg 537 202 nsub 2 3 one;
#X msg 546 238 sub 2 2 newer;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 9 0 0 0;
#X connect 16 0 0 0;
#X connect 18 0 10 0;
#X connect 19 0 10 0;
#X connect 22 0 10 0;
#X connect 25 0 10 0;
#X connect 29 0 10 0;
#X connect 30 0 10 0;
#X restore 64 377 pd complex operations;
#X text 62 358 for more info:;
#X msg 120 151 open;
#X text 33 152 open editor:;
#X msg 469 178 readagain;
#X text 542 177 reopens last file read;
#X msg 325 320 remove 3;
#X text 391 319 delete message \, leave index alone;
#X msg 496 228 writeagain;
#X text 576 230 rewrite last file written;
#N canvas 116 68 589 315 even 0;
#X obj 32 207 coll /tmp/new.coll;
#C restore;
#X obj 32 236 print more_coll;
#X text 133 78 load ...;
#X msg 49 99 dump;
#X msg 77 146 renumber;
#X msg 78 169 dump;
#X msg 67 122 swap 1 2;
#X msg 32 76 1 100 \, 2 200;
#X text 21 32 this is not like in the reference \,;
#X text 22 45 renumber shouldn't be needed:;
#X text 135 123 swap 1 & 2;
#X msg 33 268 renumber;
#X text 30 289 doesn't quite work as expected ...;
#X obj 301 242 print more_coll;
#X obj 301 213 coll /tmp/new1.coll;
#C restore;
#X msg 301 80 2 2 3 4 \, 1 1 2 3 \, 3 3 4 5;
#X msg 318 106 sort 1;
#X msg 325 132 dump;
#X msg 412 106 sort -1;
#X text 299 49 sort by index or element \, up or down:;
#X text 468 108 up;
#X text 375 107 down;
#X msg 366 155 sort 1 3;
#X msg 442 153 sort -1 3;
#X text 371 137 sort by 3rd element:;
#X msg 379 182 dump;
#X text 141 147 order by index*;
#X text 17 259 *;
#X connect 0 0 1 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 14 0 13 0;
#X connect 15 0 14 0;
#X connect 16 0 14 0;
#X connect 17 0 14 0;
#X connect 18 0 14 0;
#X connect 22 0 14 0;
#X connect 23 0 14 0;
#X connect 25 0 14 0;
#X restore 577 78 pd even more things;
#X msg 111 176 wclose;
#X text 19 177 close & save:;
#N canvas 0 0 450 300 problems 0;
#X obj 121 205 outlet;
#X msg 93 86 min;
#X msg 121 114 max;
#X text 85 33 please look at coll.txt if you think;
#X text 85 46 you can help...;
#N canvas 63 144 658 284 refer 0;
#X msg 45 98 1 1 \, 2 2 \, 3 3;
#X floatatom 408 135 5 0 0 0 - - -;
#X floatatom 475 204 5 0 0 0 - - -;
#X obj 45 132 coll /tmp/1.coll;
#C restore;
#X obj 475 167 coll /tmp/2.coll;
#C restore;
#X msg 475 99 refer /tmp/1.coll;
#X text 43 71 load data into 1.coll:;
#X text 396 73 tell 2.coll to refer to 1.coll:;
#X text 215 135 retrieve 1.coll's contents:;
#X text 40 31 I once crashed* pd using this so please use with caution
...;
#X text 50 236 * can't reproduce it :(;
#X connect 0 0 3 0;
#X connect 1 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 4 0;
#X restore 302 250 pd refer;
#X text 324 100 comment;
#X text 50 246 I don't consider this to be stable:;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X restore 25 469 pd problems;
#X text 573 60 swap \, sort \, renumber:;
#N canvas 145 112 494 449 META 0;
#X text 12 255 HELP_PATCH_AUTHORS Christoph Kummerer. Revised by Jonathan
Wilkes for Pd-extended 0.42 to conform to the PDDP template.;
#X text 12 225 WEBSITE http://suita.chopin.edu.pl/~czaja/miXed/externs/cyclone.html
;
#X text 12 5 KEYWORDS control storage max_compatible filesystem;
#X text 12 45 DESCRIPTION store and edit collections of messages;
#X text 12 65 INLET_0 bang float list wclose open clear next prev dump
read write length delete remove goto end filetype flags refer min max
store nstore assoc subsym deassoc nth merge insert nsub sub readagain
writeagain swap renumber sort;
#X text 12 125 OUTLET_0 list;
#X text 12 145 OUTLET_1 float;
#X text 12 165 OUTLET_2 bang;
#X text 12 185 OUTLET_3 bang;
#X text 12 25 LICENSE SIBSD;
#X text 12 205 AUTHOR Krzysztof Czaja;
#X restore 689 624 pd META;
#X connect 5 0 8 0;
#X connect 5 1 11 0;
#X connect 5 2 12 0;
#X connect 5 3 13 0;
#X connect 6 0 22 0;
#X connect 7 0 5 0;
#X connect 9 0 5 0;
#X connect 10 0 5 0;
#X connect 14 0 5 0;
#X connect 15 0 5 0;
#X connect 16 0 5 0;
#X connect 17 0 5 0;
#X connect 22 0 5 0;
#X connect 29 0 5 0;
#X connect 32 0 5 0;
#X connect 33 0 5 0;
#X connect 39 0 5 0;
#X connect 41 0 5 0;
#X connect 43 0 5 0;
#X connect 45 0 5 0;
#X connect 47 0 5 0;
#X connect 49 0 5 0;
#X connect 51 0 5 0;
#X connect 52 0 5 0;
#X connect 54 0 5 0;
#X connect 58 0 5 0;
#X connect 63 0 5 0;
#X connect 65 0 5 0;
