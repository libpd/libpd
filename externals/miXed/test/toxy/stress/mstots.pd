#N canvas 337 46 624 565 12;
#X obj 278 125 Uzi 10;
#X msg 49 16 1000;
#X msg 103 16 5000;
#X msg 154 16 10000;
#X msg 278 160 push;
#X obj 49 287 tot .;
#X obj 278 291 tot .;
#X msg 374 160 tot catch .(console show.);
#X msg 394 47 50000;
#X text 137 46 don't even try this on windows:;
#X msg 316 207 add #;
#X msg 466 81 80000;
#X obj 50 512 tot .;
#X msg 49 246 tot ::mstots::readclock \$1;
#X obj 49 95 t 0 0 b;
#X msg 62 211 tot ::mstots::setclock;
#X msg 50 369 tot namespace eval mstots .(proc setclock .(.) .(set
::mstots::lastclock [clock clicks -milliseconds].).);
#X obj 374 125 loadbang;
#X obj 50 336 loadbang;
#X floatatom 49 65 5 0 0 0 - - -;
#X msg 70 423 tot namespace eval mstots .(proc readclock .(niter.)
.(set delta [expr .([clock clicks -milliseconds] - $::mstots::lastclock.)]
.: puts [concat $delta ms ([expr .($niter / $delta.)] Mb/s)].).);
#X obj 316 246 testmess . 128 7;
#X text 458 245 1024 characters;
#X text 128 80 this takes ~ one second on a 2.66 linux:;
#X connect 0 0 4 0;
#X connect 1 0 19 0;
#X connect 2 0 19 0;
#X connect 3 0 19 0;
#X connect 4 0 6 0;
#X connect 7 0 6 0;
#X connect 8 0 19 0;
#X connect 10 0 21 0;
#X connect 11 0 19 0;
#X connect 13 0 5 0;
#X connect 14 0 13 0;
#X connect 14 1 0 0;
#X connect 14 2 15 0;
#X connect 15 0 5 0;
#X connect 16 0 12 0;
#X connect 17 0 7 0;
#X connect 17 0 10 0;
#X connect 18 0 16 0;
#X connect 18 0 20 0;
#X connect 19 0 14 0;
#X connect 20 0 12 0;
#X connect 21 0 6 0;
